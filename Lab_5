using System;


namespace Prakt_lab5
{
    class Program
    {

        static bool Task1(int[,] matrix, int n)
        {
            for (int i = 0; i != n - 1; ++i)
            {
                int temp = matrix[i, 0] * matrix[i + 1, 0];
                for (int j = 1; j != n; ++j)
                {
                    temp += matrix[i, j] * matrix[i + 1, j];
                }
                if (temp != 0)
                    return false;
            }
            return true;
        }
        static int FindMin(int[,] matrix, int n, int m) //ищем минимальный элемент в треугольнике
        {
            int min = matrix[n, m];
            if (n != 0 && m == 0)
            {
                for (int i = 0; i != n; ++i)
                    if (matrix[i, 0] < min)
                        min = matrix[i, 0];
            }
            else if (n == 0 && m != 0)
            {
                for (int j = 0; j != m; ++j)
                    if (matrix[0, j] < min)
                        min = matrix[0, j];
            }
            else
            {
                for (int i = 0; i != n; ++i)
                    for (int j = 0; j != m; ++j)
                        if (matrix[i, j] < min)
                            min = matrix[i, j];
            }
            return min;
        }
        static int FindMax(int[,] matrix, int n, int m) //ищем максимальный элемент в треугольнике
        {
            int max = matrix[n, m];
            if (n != 0 && m == 0)
            {
                for (int i = 0; i != n; ++i)
                    if (matrix[i, 0] > max)
                        max = matrix[i, 0];
            }
            else if (n != 0 && m != 0)
            {
                for (int i = 0; i != n; ++i)
                    for (int j = 0; j != m; ++j)
                        if (matrix[i, j] > max)
                            max = matrix[i, j];
            }
            else if (n == 0 && m != 0)
            {
                for (int j = 0; j != m; ++j)
                    if (matrix[0, j] > max)
                        max = matrix[0, j];
            }
            return max;
        }
        static void Task2(int[,] matrix, int n)
        {
            int k = 0;
            int l = 0;
            int[,] result_matrix = new int[n, n];
            for (int i = 0; i != n; ++i)
            {
                for (int j = 0; j != n; ++j)
                    result_matrix[k, l++] = FindMin(matrix, i, j);
                l = 0;
                k++;
            }
            PrintMatrix(result_matrix, n);
        }
        static void Task3(int[,] matrix, int n)
        {
            int[,] result_matrix = new int[n, n];
            int k = 0;
            int l = 0;
            int i = 0;
            int j = 0;
            for (; j != n; ++j)
                result_matrix[k, l++] = matrix[0, j];
            ++k;
            l = 0;
            for (; i != n; ++i)
            {
                result_matrix[k, l++] = matrix[i, j - 1];
            }
            ++k;
            l = 0;
            for (; j != 0; --j)
            {
                result_matrix[k, l++] = matrix[i - 1, j - 1];
            }
            ++k;
            l = 0;
            for (; i != 0; --i)
                result_matrix[k, l++] = matrix[i - 1, 0];
            PrintMatrix(result_matrix, 4);
        }
        static void Task4(int[,] matrix, int n)
        {
            int k = 0;
            int l = 0;
            int[,] result_matrix = new int[n, n];
            for (int i = 0; i != n; ++i)
            {
                for (int j = 0; j != n; ++j)
                    result_matrix[k, l++] = FindMin(matrix, i, j);
                l = 0;
                k++;
            }
            PrintMatrix(result_matrix, n);
        }


        static void PrintMatrix(int[,] matrix, int n)
        {
            for (int j = 0; j != n; ++j)
            {
                for (int i = 0; i != n; ++i)
                    Console.Write(matrix[i, j] + " ");
                Console.WriteLine("");
            }
        }

        static void Main(string[] args)
        {
            int[,] ort_matrix = new int[4, 4] { { 1, 1, 1, 1 },
                                                { 4, 1, -1, -2 },
                                                {1, -1, -1, 1 },
                                                {1, -3, 1, -1 }
                                              };
            int[,] matrix = new int[3, 3] { {4, 11, 3 },
                                            { 6, 10, 4 },
                                            { 2, 9, 8 } };
            Console.WriteLine(Task1(ort_matrix, 4));
            //Task2(matrix,3);//Выводится измененная матрица
            Console.WriteLine();
            //Task3(ort_matrix,4);
            //Task4(matrix, 3);
            PrintMatrix(matrix, 3);

            Console.ReadKey();
        }
    }
}
